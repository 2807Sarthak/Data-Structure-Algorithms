#include<bits/stdc++.h>
using namespace std;

#define ld              long double
#define mod             1000000007
#define ff              first
#define ss              second
#define int             long long
#define pb              push_back
#define mp              make_pair
#define pii             pair<int,int>
#define vpii            vector<pair<int,int>>
#define fr(i,a,b)     for(int i = a; i < b; i += 1)
#define all(x)          x.begin(),x.end()
#define sz(a)           (int)(a.size())
#define vi              vector<int>
#define mii             map<int,int>
#define pqb             priority_queue<int>
#define pqs             priority_queue<int,vi,greater<int> >
#define setbits(x)      __builtin_popcountll(x)
#define zrobits(x)      __builtin_ctzll(x)
#define inf             1e18
#define ps(x,y)         fixed<<setprecision(y)<<x
#define mk(arr,n,type)  type *arr=new type[n];
#define w(x)            int x; cin>>x; while(x--)
#define pw(b,p)         pow(b,p) + 0.1
#define input(a)      for(auto it = a.begin(); it != a.end(); it++) { int value; cin >> value; *it = value;}
#define print(a)        for(auto it = a.begin() ; it != a.end() ; it++){ cout << *it << " " ;}cout << '\n';
mt19937                 rng(chrono::steady_clock::now().time_since_epoch().count());


#define SS                      stringstream
#define db(...)                 __f(#__VA_ARGS__, __VA_ARGS__)
template <typename Arg1>
void __f(const char* name, Arg1&& arg1) { cerr << name << " : " << arg1 << '\n'; }
template <typename Arg1, typename... Args>
void __f(const char* names, Arg1&& arg1, Args&&... args) {
	const char* comma = strchr(names + 1, ',');
	cerr.write(names, comma - names) << " : " << arg1 << " | "; __f(comma + 1, args...);
}
void FASTIO()
{
	ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
}

int power(int a, int b)	//a is base, b is exponent
{
	if (b == 0)
		return 1;
	if (b == 1)
		return a;
	if (b % 2 == 1)
		return (power(a, b - 1) * a) % mod;
	int q = power(a, b / 2);
	return (q * q) % mod;
}
bool cmp(pii a,pii b)
{
    if(a.ff==b.ff)
    {
        return a.ss<b.ss;
    }
    return a.ff<b.ff;
}
void solve()
{
    int n,k;
    cin >> n >> k;
    int t[k];
    int a[k];
    vpii v;
    fr(i,0,k)
    {
        cin >> a[i];
    }
    fr(i,0,k)
    {
        cin >> t[i];
    }
    int pf[k];
    fr(i,0,k)
    {
        v.pb(mp(a[i],t[i]));
    }
    int mm[n];
    memset(mm,-1,sizeof(mm));
    fr(i,0,k)
    {
        mm[a[i]-1] = t[i];
    }
    fr(i,1,n)
    {
        if((mm[i]>mm[i-1]||mm[i]==-1) && mm[i-1]!=-1)
        {
            mm[i] = 1 + mm[i-1];
        }
    }
    for(int i=n-2;i>=0;i--)
    {
        if((mm[i]>mm[i+1] || mm[i]==-1) && mm[i+1]!=-1)
        {
            mm[i] = 1 + mm[i+1];
        }
    }
    fr(i,0,n)
    {
        cout << mm[i] << " ";
    }
    cout << "\n";
}

signed main()
{
	FASTIO();
	w(t)
	{
		solve();
	}
	return 0;
}
